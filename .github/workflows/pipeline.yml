name: 'Linter - Build - Test - Docker Deploy'

on:
  push:
    branches: [ "main" ]
    tags:
      - '*'
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read

env:
  AWS_REGION: us-east-1          # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: ecr-foodieflow # set this to your Amazon ECR repository name
  CONTAINER_NAME: foodieflow      # set this to the name of the container in the

jobs:
  linter:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.12
        uses: actions/setup-python@v1
        with:
          python-version: 3.12
      - name: Install dependencies
        run: |
          echo ${{ github.base_ref }}
          python -m pip install --upgrade pip
          pip install pylint black flake8 isort autoflake
      - name: Run Black
        run: black --check .
      - name: Run Flake8
        run: flake8 --count .
      - name: Run AutoFlake
        run: autoflake --remove-all-unused-imports --remove-unused-variables --in-place --recursive . --exclude=app/core/model/orm

  build:
    needs: linter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Test with pytest
        run: |
          pytest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials and create kubeconfig
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name cluster-eks-foodieflow

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/ecr-foodieflow:$IMAGE_TAG .
          docker tag $ECR_REGISTRY/ecr-foodieflow:$IMAGE_TAG $ECR_REGISTRY/ecr-foodieflow:$IMAGE_TAG
          docker push $ECR_REGISTRY/ecr-foodieflow:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/ecr-foodieflow:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: kubectl-apply
        run: |
          kubectl apply \
          -f production/configmap-python.yaml \
          -f production/deployment-python.yaml \
          -f production/hpa-python.yaml \
          -f production/service-python.yaml \
          -f production/service-loadbalancer.yaml \
          --kubeconfig=$HOME/.kube/config \
          --validate=false